output_dir: null

dataset:
  name: TOYData
  num_classes: 3
  img_size: 64

networks:
  def_file: ./models/ResNet_Final_Time.py
  params: {m_type: 'resnet18', num_classes: 10, first_conv_size: 7, num_sample: 3, mask_aug: true, samp_aug: false, aug_weight: 0.8, mask_center: [20, 32, 44]}

blackbox_save: false
blackbox_test: false
blackbox_name: 'blackbox_{}_{}.pth'

training_opt:
  num_epochs: 100
  batch_size: 128
  data_workers: 4
  optimizer: 'SGD'  # 'Adam' / 'SGD'
  optim_params: {lr: 0.1, momentum: 0.9, weight_decay: 0.0005}
  scheduler: 'step' # 'cosine' / 'step'
  scheduler_params: {endlr: 0.0, gamma: 0.2, milestones: [25, 50, 75]}

inst_sample:
  inst_on: true               # turn on instrumental variable sample
  inst_half: false            # merge sampled feature in the middle of the network
  w_ce: 1                     # cross entropy loss weight
  w_reg: 0.1                  # regression loss weight
  mul_ru: 10                  # regression weight multiplier
  milestones: [25,50,75]      # update w_reg by mul_ru at K-th epoch
  num_loop: 20                # number of consistent loops
  accumulate_grad: false      # use accumulated grad to implement loop
  reg_loss: 'L1'              # L1 or L2
  reg_type: 'regmean'       # 'neighbour', 'regmean', 'none'

attacker_opt:
  attack_type: 'FGSM'     # Adversarial attack algorithm type, candidates: 'PGD', 'PGDL2', 'FGSM', 'FFGSM', 'GN', 'UN'
  attack_set: 'setting1'  # attack setting is under attacker_config.yaml  
  eot_iter: 1             # EOT version of attacker is applied when eot_iter > 1

  adv_train: false        # Adversarial training
  adv_val: false          # Adversarial attack during inference

  targeted_on: false      # report success rate (for evaluating targeted attacks)
  targeted_type: 'type1'  # type1: untargeted, type2: random targeted, type3: least likely targeted, type4: most likely targeted

save_test:                       # for val
  save_data: true                # for val
  file_name: 'adv_images.pth'    # for val
  save_length: 10                # only save first 10 batch for efficiency

logger_opt:
  print_grad: false
  print_iter: 100

checkpoint_opt:
  checkpoint_step:  10
  checkpoint_name: 'test_model.pth'